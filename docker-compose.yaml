version: '2'

services:
  varnish:
    container_name: varnish-varnish
    image: "tstrohmeier/gquintard-varnish-docker"
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
     - "1080:80"
    environment:
      - SINGLE=varnish
      - VARNISH_OPTS=-n /var/lib/varnish -T :6082
    volumes:
      - workdir:/var/lib/varnish
      - ./conf/etc/varnish:/etc/varnish
    links:
      - stunnel
      - socat
    depends_on:
      - stunnel
      - socat


  hitch:
    container_name: varnish-hitch
    image: "tstrohmeier/gquintard-varnish-docker"
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
     - "1443:443"
    environment:
     - SINGLE=hitch
     - HITCH_OPTS=


  agent:
    container_name: varnish-agent
    image: "tstrohmeier/gquintard-varnish-docker"
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
     - "1085:6085"
    environment:
      - SINGLE=agent
      - AGENT_OPTS=-n /var/lib/varnish -T varnish:6082
      - STAT_OPTS=-n /var/lib/varnish
    volumes:
      - workdir:/var/lib/varnish
      - ./conf/etc/varnish/:/etc/varnish/
    links:
      - stunnel
      - socat
    depends_on:
      - stunnel
      - socat


  log:
    container_name: varnish-log
    image: "tstrohmeier/gquintard-varnish-docker"
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - SINGLE=log
      - STAT_OPTS=-n /var/lib/varnish
####### Default log (backend & frontend)
#      - LOG_OPTS=-n /var/lib/varnish
####### Log only backend requests #######
      - LOG_OPTS=-n /var/lib/varnish -b
####### Log only client requests #######
#      - LOG_OPTS=-n /var/lib/varnish -c
    volumes:
      - workdir:/var/lib/varnish
      - ./conf/etc/varnish/:/etc/varnish/
    links:
      - stunnel
      - socat
    depends_on:
      - varnish
      - stunnel
      - socat


  stunnel:
    container_name: varnish_stunnel_proxy
    image: tstrohmeier/stunnel-client
    restart: always
    ports:
      - "8888:8888"
    environment:
      - ACCEPT=8888
      - CONNECT=your.server.com:443
  socat:
    container_name: varnish_socat_proxy
    image: alpine/socat
    restart: always
    command: -v tcp-listen:7777,fork,reuseaddr tcp-connect:stunnel:8888
    ports:
      - "7777:7777"
    links:
      - stunnel
    depends_on:
      - stunnel
volumes:
  workdir:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
